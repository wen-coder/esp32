#ifndef _FONT_LIBRARY_H_
#define _FONT_LIBRARY_H_
#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#include <freertos/FreeRTOS.h>
#include <freertos/task.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using software SPI (default case):
// #define OLED_MOSI   13
// #define OLED_CLK   12
// #define OLED_DC    27
// #define OLED_CS    26
// #define OLED_RESET 14

#define OLED_MOSI   13
#define OLED_CLK   25
#define OLED_DC    27
#define OLED_CS    26
#define OLED_RESET 14


#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

void task_show_font_(void *pvParameters);


  
// const unsigned char PROGMEM qing_yuan_ji_bao[][32]= {
// {0x00,0x40,0x20,0x40,0x17,0xFC,0x10,0x40,0x83,0xF8,0x40,0x40,0x47,0xFE,0x10,0x00,0x13,0xF8,0x22,0x08,0xE3,0xF8,0x22,0x08,0x23,0xF8,0x22,0x08,0x22,0x28,0x02,0x10},
// {0x00,0x00,0x27,0xFE,0x14,0x20,0x14,0x40,0x85,0xFC,0x45,0x04,0x45,0xFC,0x15,0x04,0x15,0xFC,0x25,0x24,0xE4,0x20,0x24,0xA8,0x29,0x24,0x2A,0x22,0x30,0xA0,0x00,0x40},/*"Ô´",1*/
// {0x10,0x20,0x12,0x20,0x22,0x20,0x23,0x24,0x4A,0xA8,0xF2,0x20,0x13,0xFC,0x22,0x20,0x42,0x70,0xFA,0xA8,0x43,0x24,0x02,0x20,0x1A,0x20,0xE2,0x20,0x43,0xFE,0x00,0x00},/*"¼Ì",2*/
// {0x08,0x00,0x0B,0xF8,0x0A,0x08,0x12,0x08,0x12,0x08,0x33,0xF8,0x30,0x40,0x50,0x40,0x97,0xFC,0x10,0xE0,0x11,0x50,0x12,0x48,0x14,0x44,0x18,0x42,0x10,0x40,0x10,0x40}
// };/*"±£",3*/

// const unsigned char PROGMEM qing_yuan_ji_bao1[]=
// {
// 0x00, 0x40, 0x00, 0x00, 0x10, 0x20, 0x08, 0x00, 
//     0x20, 0x40, 0x27, 0xfe, 0x12, 0x20, 0x0b, 0xf8, 
//     0x17, 0xfc, 0x14, 0x20, 0x22, 0x20, 0x0a, 0x08, 
//     0x10, 0x40, 0x14, 0x40, 0x23, 0x24, 0x12, 0x08, 
//     0x83, 0xf8, 0x85, 0xfc, 0x4a, 0xa8, 0x12, 0x08, 
//     0x40, 0x40, 0x45, 0x04, 0xf2, 0x20, 0x33, 0xf8, 
//     0x47, 0xfe, 0x45, 0xfc, 0x13, 0xfc, 0x30, 0x40, 
//     0x10, 0x00, 0x15, 0x04, 0x22, 0x20, 0x50, 0x40, 
//     0x13, 0xf8, 0x15, 0xfc, 0x42, 0x70, 0x97, 0xfc, 
//     0x22, 0x08, 0x25, 0x24, 0xfa, 0xa8, 0x10, 0xe0, 
//     0xe3, 0xf8, 0xe4, 0x20, 0x43, 0x24, 0x11, 0x50, 
//     0x22, 0x08, 0x24, 0xa8, 0x02, 0x20, 0x12, 0x48, 
//     0x23, 0xf8, 0x29, 0x24, 0x1a, 0x20, 0x14, 0x44, 
//     0x22, 0x08, 0x2a, 0x22, 0xe2, 0x20, 0x18, 0x42, 
//     0x22, 0x28, 0x30, 0xa0, 0x43, 0xfe, 0x10, 0x40, 
//     0x02, 0x10, 0x00, 0x40, 0x00, 0x00, 0x10, 0x40
// };
#endif
